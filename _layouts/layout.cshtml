@using System
@using System.Collections.Generic
@using System.Text
@using Pretzel.Logic.Templating.Context
@using Page = Pretzel.Logic.Templating.Context.Page

<!DOCTYPE html>
<html lang="en-US">
<head>
    <meta content="en-us" http-equiv="Content-Language" />
    <meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1" />
    @{
        if( Model.Page.Bag.ContainsKey( "tags" ) )
        {
            var tagBuilder = new StringBuilder();
            var tags = Model.Page.Bag["tags"] as IEnumerable<string>;
            foreach( string tag in tags ?? Array.Empty<string>() )
            {
                tagBuilder.Append( tag + "," );
            }
            if( tagBuilder.Length > 0 )
            {
                tagBuilder = tagBuilder.Remove( tagBuilder.Length - 1, 1 );
                @:<meta name="keywords" content="@tagBuilder.ToString()" />
            }
        }

        if( Model.Page.Bag.ContainsKey( "description" ) )
        {
            @:<meta name="description" content="@(Model.Page.Bag["description"])" />
            @:<meta property="og:description" content="shendrick.net: @(Model.Page.Bag["description"])" />
        }
    }

    <meta property="og:title" content="shendrick.net: @Model.Page.Title" />
    <meta property="og:url" content="@(Model.Site.Config["url"])@Model.Page.Url" />
    <meta property="og:site_name" content="@(Model.Site.Config["title"])" />
    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:site" content="@@xforever1313" />
    <meta property="og:type" content="article" />

    <link href="/rss.xml" type="application/rss+xml" rel="alternate" title="Blog Feed" />
    <link href="/atom.xml" type="application/atom+xml" rel="alternate" title="Blog Feed" />
    <link rel="shortcut icon" href="/static/img/favicon.ico" />

    <title>@Model.Title</title>

    <!-- BOOTSTRAP STYLES-->
    <link href="/static/css/bootstrap.css" rel="stylesheet" />

    <!-- Font-Awesome -->
    <link rel="stylesheet" href="/static/css/fa.fontawesome.min.css">
    <link rel="stylesheet" href="/static/css/fa.brands.min.css">
    <link rel="stylesheet" href="/static/css/fa.regular.min.css">
    <link rel="stylesheet" href="/static/css/fa.solid.min.css">
    <link rel="stylesheet" href="/static/css/fa.v5-font-face.min.css">

    <!--CUSTOM BASIC STYLES-->
    <link href="/static/css/basic.css" rel="stylesheet" />

    <!--CUSTOM MAIN STYLES-->
    <link href="/static/css/custom.css" rel="stylesheet" />

    <!-- GOOGLE FONTS-->
    <link href="//fonts.googleapis.com/css?family=Open+Sans" rel="stylesheet" type="text/css" />
    
    <!-- Highlight.js -->
    <link rel="stylesheet" href="//cdn.jsdelivr.net/highlight.js/8.4/styles/default.min.css" />
</head>
<body>
    <div id="wrapper">
        <!-- Top row -->
        <nav class="navbar navbar-default navbar-cls-top " role="navigation" style="margin-bottom: 0">
            <!-- Top-left -->
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".sidebar-collapse">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
            </div>
            <h1 id="main-title" style="padding:0.5em;">Seth Hendrick's Website!</h1>
        </nav>

        <!-- Side Bar -->
        <nav class="navbar-default navbar-side" role="navigation">
            <div class="sidebar-collapse">
                <ul class="nav" id="main-menu">
                    <li>
                        <a href="/index.html"><img class="image avatar" src="/static/img/me.jpg" width="240" height="240" /></a>
                    </li>
                    <li>
                        <a href="/index.html"><i class="fa fa-home"></i>Home</a>
                    </li>
                    @{
                        List<string> ignorePages = new List<string>() { "/", "/posts" };
                        List<Page> aboutPages = new List<Page>();
                        List<Page> otherPages = new List<Page>();
                        foreach( Page thePage in Model.Site.Pages )
                        {
                            if( thePage.Bag.ContainsKey( "layout" ) && "aboutpage".Equals( thePage.Bag["layout"] ) )
                            {
                                aboutPages.Add( thePage );
                            }
                            else if(
                                ( ignorePages.Contains( @thePage.Id ) == false ) &&
                                ( string.IsNullOrEmpty( @thePage.Id ) == false ) &&
                                ( @thePage.Id.Contains( ".well-known" ) == false ) && // Don't include lets encrypt stuff.
                                ( "nil".Equals( thePage.Bag["layout"] ) == false ) &&
                                // Don't include page if we explicitly exclude it from the nav bar.
                                ( ( @thePage.Bag.ContainsKey( "exclude_from_navbar" ) && ( "True".Equals( @thePage.Bag["exclude_from_navbar"].ToString(), StringComparison.InvariantCultureIgnoreCase ) ) ) == false )
                            )
                            {
                                otherPages.Add( thePage );
                            }
                        }

                        int Compare( Page left, Page right )
                        {
                            const string key = "pageindex";
                            if( left.Bag.ContainsKey( key ) == false )
                            {
                                throw new KeyNotFoundException(
                                    left.Id + " needs " + key
                                );
                            }
                            else if ( right.Bag.ContainsKey(key) == false )
                            {
                                throw new KeyNotFoundException(
                                    right.Id + " needs " + key
                                );
                            }
                            return left.Bag[key].ToString().CompareTo( right.Bag[key].ToString() );
                        }
                        aboutPages.Sort( Compare );
                    }
                    <li>
                        <a href="#"><i class="fa fa-question-circle"></i>About<span class="fa arrow"></span></a>
                        <ul class="nav nav-second-level">
                            @foreach( var thePage in aboutPages )
                            {
                                if( thePage.Bag.ContainsKey( "icon" ) )
                                {
                                    @:<li><a href="@thePage.Url"><i class="fa @thePage.Bag["icon"]"></i>@thePage.Title</a></li>
                                }
                                else
                                {
                                    @:<li><a href="@thePage.Url"><i class="fa-regular fa-circle-dot"></i>@thePage.Title</a></li>
                                }
                            }
                        </ul>
                    </li>
                    <li>
                        <a href="#"><i class="fa fa-file-text"></i>Posts<span class="fa arrow"></span></a>
                        <ul class="nav nav-second-level">
                            <li><a href="/posts.html"><i class="fa-regular fa-circle-dot"></i>All Posts</a></li>
                            @foreach( var category in Model.Site.Categories )
                            {
                                foreach( var page in Model.Site.Pages )
                                {
                                    if( page.Bag.ContainsKey( "category" ) )
                                    {
                                        if( category.Name.Equals( page.Bag["category"] ) )
                                        {
                                            @:<li><a href="@(page.Url)"><i class="fa-regular fa-circle-dot"></i>@(category.Name)</a></li>
                                        }
                                    }
                                }
                            }
                        </ul>
                    </li>
                    @foreach( var thePage in otherPages )
                    {
                        if( thePage.Bag.ContainsKey( "icon" ) )
                        {
                            @:<li><a href="@thePage.Url"><i class="fa @thePage.Bag["icon"]"></i>@thePage.Title</a></li>
                        }
                        else
                        {
                            @:<li><a href="@thePage.Url"><i class="fa-regular fa-circle-dot"></i>@thePage.Title</a></li>
                        }
                    }
                    <li>
                        <a href="#"><i class="fa fa-users"></i>Follow Me!<span class="fa arrow"></span></a>
                        <ul class="nav nav-second-level">
                            <li>
                                <a href="https://twitter.com/xforever1313" target="_blank" rel="noopener noreferrer nofollow"><i class="fa-brands fa-square-twitter"></i>Twitter</a>
                            </li>
                            <li>
                                <a rel="me" href="https://tech.lgbt/@@xforever1313" target="_blank" rel="noopener noreferrer nofollow"><i class="fa-brands fa-mastodon"></i>Mastodon</a>
                            </li>
                            <li>
                                <a href="https://github.com/xforever1313" target="_blank" rel="noopener noreferrer nofollow"><i class="fa-brands fa-square-github"></i>GitHub</a>
                            </li>
                            <li>
                                <a href="https://gitlab.com/xforever1313" target="_blank" rel="noopener noreferrer nofollow"><i class="fa-brands fa-square-gitlab"></i>GitLab</a>
                            </li>
                            <li>
                                <a href="https://www.linkedin.com/pub/seth-hendrick/47/847/615" target="_blank" rel="noopener noreferrer nofollow"><i class="fa-brands fa-linkedin"></i>LinkedIn</a>
                            </li>
                            <li>
                                <a href="https://www.strava.com/athletes/14128419" target="_blank" rel="noopener noreferrer nofollow"><i class="fa fa-map-signs" aria-hidden="true"></i>Strava</a>
                            </li>
                            <li>
                                <a href="/atom.xml"><i class="fa fa-rss"></i>ATOM Feed</a>
                            </li>
                            <li>
                                <a href="/rss.xml"><i class="fa fa-rss"></i>RSS Feed</a>
                            </li>
                        </ul>
                    </li>
                    <li>
                        <a href="#"><i class="fa fa-plus-square"></i>Other Websites<span class="fa arrow"></span></a>
                        <ul class="nav nav-second-level">
                            <li>
                                <a href="https://troop53stories.shendrick.net/" target="_blank" rel="noopener noreferrer nofollow"><i class="fa fa-map-signs"></i>Troop 53 Stories</a>
                            </li>
                            <li>
                                <a href="https://www.roclongboarding.info/" target="_blank" rel="noopener noreferrer nofollow"><i class="fa-solid fa-map-location-dot"></i>Rochester Longboarding Info</a>
                            </li>
                            <li>
                                <a href="https://bettadelic.art/" target="_blank" rel="noopener noreferrer nofollow"><i class="fa-solid fa-fish-fins"></i>Bettadelic</a>
                            </li>
                        </ul>
                    </li>
                </ul>
            </div>
        </nav>

        <!-- Main Page -->
        <div id="page-wrapper">
            @Raw( Model.Content )
        </div>
    </div>

    <!-- Footer -->
    <div id="footer-sec">
        <div>
            &copy; @DateTime.Now.Year <a href="/index.html">@Model.Site.Config["author"]</a> | Design By : <a href="http://www.binarytheme.com/" target="_blank" rel="noopener noreferrer nofollow">BinaryTheme.com</a> |
            <span>Page generated on @(DateTime.UtcNow.ToString( "R" ))</span> | Opinions are Mine
        </div>
        <div>
            Posts on <a href="/index.html">@Model.Site.Config["url"]</a> are licensed under a <a rel="license noopener noreferrer nofollow" target="_blank" href="https://creativecommons.org/licenses/by-sa/4.0/">Creative Commons Attribution-ShareAlike 4.0 International License</a>.
        </div>
        <div>
            <a rel="license noopener noreferrer nofollow" target="_blank" href="https://creativecommons.org/licenses/by-sa/4.0/">
                <img alt="Creative Commons License CC BY-SA 4.0" style="border-width:0" src="https://i.creativecommons.org/l/by-sa/4.0/88x31.png" />
            </a>
        </div>
    </div>

    <!-- SCRIPTS -AT THE BOTTOM TO REDUCE THE LOAD TIME-->
    <!-- JQUERY SCRIPTS -->
    <script src="/static/js/jquery-1.10.2.js"></script>
    <!-- BOOTSTRAP SCRIPTS -->
    <script src="/static/js/bootstrap.js"></script>
    <!-- METISMENU SCRIPTS -->
    <script src="/static/js/jquery.metisMenu.js"></script>
    <!-- CUSTOM SCRIPTS -->
    <script src="/static/js/custom.js"></script>

    @if( Model.Page.Bag.ContainsKey( "code" ) && Model.Page.Bag["code"].Equals( true ) )
    {
        <!-- Highlight.js -->
        // Include highlight.js only if our page contains code.
        <script src="//cdn.jsdelivr.net/highlight.js/8.4/highlight.min.js"></script>
        <script>hljs.initHighlightingOnLoad();</script>
    }
</body>
</html>
